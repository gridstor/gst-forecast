---
import type { CollectionEntry } from 'astro:content';
import ForecastPreview from './ForecastPreview.astro';

interface Props {
  forecasts: CollectionEntry<'forecasts'>[];
  loadMore?: boolean;
}

const { forecasts, loadMore = false } = Astro.props;
---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="forecast-grid">
  {forecasts.map(forecast => (
    <ForecastPreview forecast={forecast} />
  ))}
</div>

{loadMore && (
  <div class="flex justify-center mt-12">
    <button
      id="load-more"
      class="px-6 py-3 bg-brand-primary text-brand-secondary rounded-full hover:bg-brand-primary-dark transition-colors duration-300"
    >
      Load More Forecasts
    </button>
  </div>
)}

{loadMore && (
  <script>
    let page = 1;
    const loadMoreBtn = document.getElementById('load-more');
    const forecastGrid = document.getElementById('forecast-grid');

    async function loadMoreForecasts() {
      try {
        const response = await fetch(`/api/forecasts?page=${page + 1}`);
        const data = await response.json();
        
        if (data.forecasts.length === 0) {
          loadMoreBtn.style.display = 'none';
          return;
        }

        // Create forecast previews from the returned data
        data.forecasts.forEach(forecast => {
          const article = document.createElement('article');
          article.className = 'group bg-white rounded-lg shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100';
          article.innerHTML = `
            <div class="p-6">
              <div class="flex items-center justify-between mb-4">
                <span class="px-3 py-1 rounded-full text-sm font-medium bg-[rgba(47,255,217,0.1)] text-[#2A2A2A]">
                  ${forecast.data.region}
                </span>
                <time datetime="${forecast.data.date}" class="text-sm text-gray-500">
                  ${forecast.data.date}
                </time>
              </div>
              <h3 class="text-xl font-semibold text-gray-900 mb-2 group-hover:text-[#2FFFD9] transition-colors">
                <a href="/forecasts/${forecast.slug}" class="block">
                  ${forecast.data.title}
                </a>
              </h3>
              <p class="text-gray-600 line-clamp-3">
                ${forecast.data.description}
              </p>
            </div>
          `;
          forecastGrid.appendChild(article);
        });

        page += 1;
      } catch (error) {
        console.error('Error loading more forecasts:', error);
      }
    }

    loadMoreBtn?.addEventListener('click', loadMoreForecasts);
  </script>
)}